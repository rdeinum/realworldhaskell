1. Haskell provides a standard function, last :: [a] -> a, that returns the last element of a list. From reading the type alone, what are the possible valid behaviors
(omitting crashes and infinite loops) that this function could have? What are a few
things that this function clearly cannot do?

This function takes a list of values and returns a value with the same type as the values in the list. 
This function can clearly not return a value with a different type as the values from the list passed.